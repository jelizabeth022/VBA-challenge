Sub StockMarketAnalysis()
    Dim ws As Worksheet
    Dim ticker As String
    Dim lastRow As Long, outputRow As Integer
    Dim openPrice As Double, closePrice As Double, quarterlyChange As Double, percentChange As Double
    Dim totalVolume As Double
    Dim greatestIncrease As Double, greatestDecrease As Double, greatestVolume As Double
    Dim greatestIncreaseTicker As String, greatestDecreaseTicker As String, greatestVolumeTicker As String
    
    ' Loop through all worksheets (quarters)
    For Each ws In ThisWorkbook.Sheets
        lastRow = ws.Cells(Rows.Count, 1).End(xlUp).Row ' Find the last row
        outputRow = 2 ' Start output from row 2
        totalVolume = 0
        openPrice = ws.Cells(2, 3).Value ' First open price
        
        ' Create output headers
        ws.Cells(1, 9).Value = "Ticker"
        ws.Cells(1, 10).Value = "Quarterly Change"
        ws.Cells(1, 11).Value = "% Change"
        ws.Cells(1, 12).Value = "Total Volume"
        
        greatestIncrease = 0
        greatestDecrease = 0
        greatestVolume = 0
        
        ' Loop through rows
        For i = 2 To lastRow
            If ws.Cells(i + 1, 1).Value <> ws.Cells(i, 1).Value Then ' New ticker found
                ticker = ws.Cells(i, 1).Value
                closePrice = ws.Cells(i, 6).Value
                quarterlyChange = closePrice - openPrice
                
                If openPrice <> 0 Then
                    percentChange = Round(quarterlyChange / openPrice, 4) ' Fix percentage formatting issue
                Else
                    percentChange = 0
                End If
                
                totalVolume = totalVolume + ws.Cells(i, 7).Value
                
                ' Output data
                ws.Cells(outputRow, 9).Value = ticker
                ws.Cells(outputRow, 10).Value = quarterlyChange
                ws.Cells(outputRow, 11).Value = percentChange
                ws.Cells(outputRow, 11).NumberFormat = "0.00%"
                ws.Cells(outputRow, 12).Value = totalVolume
                
                ' Apply conditional formatting (Green for positive, Red for negative) only to Quarterly Change column
                If quarterlyChange > 0 Then
                    ws.Cells(outputRow, 10).Interior.Color = RGB(0, 255, 0) ' Green
                ElseIf quarterlyChange < 0 Then
                    ws.Cells(outputRow, 10).Interior.Color = RGB(255, 0, 0) ' Red
                End If
                
                ' Update greatest increase, decrease, and volume
                If percentChange > greatestIncrease Then
                    greatestIncrease = percentChange
                    greatestIncreaseTicker = ticker
                End If
                
                If percentChange < greatestDecrease Then
                    greatestDecrease = percentChange
                    greatestDecreaseTicker = ticker
                End If
                
                If totalVolume > greatestVolume Then
                    greatestVolume = totalVolume
                    greatestVolumeTicker = ticker
                End If
                
                ' Reset values for next ticker
                outputRow = outputRow + 1
                openPrice = ws.Cells(i + 1, 3).Value
                totalVolume = 0
            Else
                totalVolume = totalVolume + ws.Cells(i, 7).Value
            End If
        Next i
        
        ' Output greatest increase, decrease, and volume
        ws.Cells(2, 14).Value = "Greatest % Increase"
        ws.Cells(3, 14).Value = "Greatest % Decrease"
        ws.Cells(4, 14).Value = "Greatest Total Volume"
        
        ws.Cells(2, 15).Value = greatestIncreaseTicker
        ws.Cells(3, 15).Value = greatestDecreaseTicker
        ws.Cells(4, 15).Value = greatestVolumeTicker
        
        ws.Cells(2, 16).Value = greatestIncrease
        ws.Cells(2, 16).NumberFormat = "0.00%"
        ws.Cells(3, 16).Value = greatestDecrease
        ws.Cells(3, 16).NumberFormat = "0.00%"
        ws.Cells(4, 16).Value = greatestVolume
        
    Next ws
    
    MsgBox "Stock analysis completed!", vbInformation
End Sub
